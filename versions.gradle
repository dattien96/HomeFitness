def versions = [:]
versions.arch_core = "1.1.1"
versions.support = "27.1.1"
versions.android_gradle_plugin = '3.2.1'
versions.room = "1.1.1"
versions.lifecycle = "1.1.1"
versions.arch_core = "1.1.1"
versions.retrofit = "2.4.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.dagger = "2.16"
versions.espresso = "3.0.2"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_inline = "2.13.0"
versions.mockito_arch = "1.1.1"
versions.robolectric = "3.4.2"
versions.kotlin = "1.2.51"
versions.glide = "4.7.1"
versions.constraint_layout = "1.1.2"
versions.junit = "4.12"
versions.rxjava2 = "2.1.17"
versions.rxandroid = "2.0.2"
versions.rxkotlin = "2.2.0"
versions.runner = "1.0.2"
versions.easy_permission = "1.2.0"

def supports = [:]
supports.annotations = "com.android.support:support-annotations:$versions.support"
supports.app_compat = "com.android.support:appcompat-v7:$versions.support"
supports.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
supports.cardview = "com.android.support:cardview-v7:$versions.support"
supports.design = "com.android.support:design:$versions.support"
supports.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"

def rooms = [:]
rooms.runtime = "android.arch.persistence.room:runtime:$versions.room"
rooms.compiler = "android.arch.persistence.room:compiler:$versions.room"
rooms.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
rooms.testing = "android.arch.persistence.room:testing:$versions.testing"

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"

def retrofits = [:]
retrofits.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofits.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofits.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofits.apdater = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

def daggers = [:]
daggers.runtime = "com.google.dagger:dagger:$versions.dagger"
daggers.android = "com.google.dagger:dagger-android:$versions.dagger"
daggers.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
daggers.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
daggers.support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

def espressos = [:]
espressos.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espressos.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.arch = "android.arch.core:core-testing:$versions.mockito_arch"
mockito.inline = "org.mockito:mockito-inline:$versions.mockito_inline"

def robolectric = [:]
robolectric.core = "org.robolectric:robolectric:$versions.robolectric"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

def glides = [:]
glides.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glides.compiler = "com.github.bumptech.glide:compiler:$versions.glide"

def reactive = [:]
reactive.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
reactive.rxandroid = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
reactive.rxkotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"

def des = [:]
des.support = supports
des.binding = "androidx.databinding:databinding-compiler:$versions.android_gradle_plugin"
des.room = rooms
des.lifecycle = lifecycle
des.arch_core = "android.arch.core:core-testing:$versions.arch_core"
des.retrofit = retrofits
des.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
des.dagger = daggers
des.espresso = espressos
des.mockito = mockito
des.robolectric = robolectric
des.kotlin = kotlin
des.glide = glides
des.junit = "junit:junit:$versions.junit"
des.reactive = reactive
des.runner = "com.android.support.test:runner:$versions.runner"
des.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
des.permission = "pub.devrel:easypermissions:$versions.easy_permission"

def build_version = [:]
build_version.min_sdk = 19
build_version.target_sdk = 27
build_version.build_tools = "27.0.3"

ext.des = des
ext.build_version = build_version

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos
