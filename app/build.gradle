apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: '../autodimension.gradle'

android {
    compileSdkVersion build_version.target_sdk
    defaultConfig {
        applicationId "dattien96.vn.homefitness"
        minSdkVersion build_version.min_sdk
        targetSdkVersion build_version.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        debug {
            minifyEnabled false
            useProguard false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        staging {
            minifyEnabled false
            useProguard false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            matchingFallbacks = ['debug', 'qa', 'release']
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    flavorDimensions "finess_flavor"

    productFlavors {
        develop {
            buildConfigField "boolean", "MOCK_DATA", "false"
            matchingFallbacks = ['debug', 'release']
        }

        mock {
            buildConfigField "boolean", "MOCK_DATA", "true"
            matchingFallbacks = ['debug', 'release']
        }

        production {
            buildConfigField "boolean", "MOCK_DATA", "false"
            matchingFallbacks = ['debug', 'release']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation des.kotlin.stdlib

    // support
    implementation des.support.app_compat
    implementation des.support.design
    implementation des.support.recyclerview
    implementation des.support.cardview
    implementation des.support.constraint_layout

    // reactive
    implementation des.reactive.rxjava2
    implementation des.reactive.rxandroid
    implementation des.reactive.rxkotlin

    // room
    implementation des.room.runtime
    kapt des.room.compiler

    // arch
    implementation des.lifecycle.runtime
    implementation des.lifecycle.extensions
    kapt des.lifecycle.compiler

    // test
    implementation des.runner
    implementation des.junit
    implementation des.espresso.core

    //glide
    implementation des.glide.runtime
    kapt des.glide.compiler

    // test
    implementation des.runner
    implementation des.junit
    implementation des.espresso.core
    implementation des.mockito.core
    testImplementation des.mockito.arch
    testImplementation des.mockito.inline
    testImplementation des.robolectric.core

    //koin
    implementation des.koin.core
    implementation des.koin.android
    implementation des.koin.viewmodel
}
